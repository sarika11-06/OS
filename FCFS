#include <stdio.h>

// Function to calculate average waiting time and turnaround time
void findAvgTime(int processes[], int n, int bt[]) {
    int wt[n], tat[n];

    // Calculate waiting time for first process
    wt[0] = 0;

    // Calculate waiting time for remaining processes
    for (int i = 1; i < n; i++)
        wt[i] = wt[i - 1] + bt[i - 1];

    // Calculate turnaround time by adding burst time and waiting time
    for (int i = 0; i < n; i++)
        tat[i] = bt[i] + wt[i];

    // Calculate average waiting time and turnaround time
    float total_wt = 0, total_tat = 0;
    for (int i = 0; i < n; i++) {
        total_wt += wt[i];
        total_tat += tat[i];
    }
    float avg_wt = total_wt / n;
    float avg_tat = total_tat / n;

    // Print the results
    printf("Processes Burst Time  Waiting Time  Turnaround Time\n");
    for (int i = 0; i < n; i++)
        printf(" %d\t\t%d\t\t%d\t\t%d\n", i + 1, bt[i], wt[i], tat[i]);
    printf("\nAverage waiting time = %.2f\n", avg_wt);
    printf("Average turnaround time = %.2f\n", avg_tat);
}

int main() {
    // Number of processes
    int n = 4;

    // Array to store burst times of processes
    int bt[] = {10, 5, 8, 3};

    // Array to store process IDs
    int processes[] = {1, 2, 3, 4};

    // Call function to calculate average waiting time and turnaround time
    findAvgTime(processes, n, bt);

    return 0;
}
