#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>
#define MAX 100

int regCount = 1;
void trim(char* str) {
    int i = 0, j = 0;
    while (isspace(str[i])) i++;
    while (str[i]) str[j++] = str[i++];
    str[j] = '\0';
    j--;
        while (j >= 0 && isspace(str[j])) str[j--] = '\0';
    }
    void generateAssembly(char *res, char *a1, char *opr, char *a2) {
        if (strcmp(opr, "+") == 0) {
            printf("MOV R%d, %s\n", regCount, a1);
            printf("ADD R%d, %s\n", regCount, a2);
        } else if (strcmp(opr, "-") == 0) {
            printf("MOV R%d, %s\n", regCount, a1);
            printf("SUB R%d, %s\n", regCount, a2);
        } else if (strcmp(opr, "*") == 0) {
            printf("MOV R%d, %s\n", regCount, a1);
            printf("MUL R%d, %s\n", regCount, a2);
        } else if (strcmp(opr, "/") == 0) {
            printf("MOV R%d, %s\n", regCount, a1);
            printf("DIV R%d, %s\n", regCount, a2);
        } else if (strcmp(opr, "=") == 0 || opr[0] == '\0') {
            printf("MOV %s, %s\n", res, a1);
            return;
        } else {
            printf("; Unsupported operator: %s\n", opr);
            return;
        }
        printf("MOV %s, R%d\n", res, regCount);
        regCount++;
}


int main() {
    int n;
    char line[MAX];
    char result[20], arg1[20], op[5], arg2[20];
    
    printf("Enter number of 3-address code instructions: ");
    scanf("%d", &n);
    
    printf("\nEnter each 3-address code line below:\n\n");
    
    printf("Generated Assembly Code:\n\n");
    
    int count = 0;
    while (count < n) {
        fgets(line, sizeof(line), stdin);
        trim(line);
        if (strlen(line) == 0) continue;
        
        result[0] = arg1[0] = op[0] = arg2[0] = '\0';
        
        if (sscanf(line, "%s = %s %s %s", result, arg1, op, arg2) == 4) {
            generateAssembly(result, arg1, op, arg2);
        } else if (sscanf(line, "%s = %s", result, arg1) == 2) {
            strcpy(op, "=");
            generateAssembly(result, arg1, op, "");
        } else {
            printf("; Couldn't parse line: %s\n", line);
        }
        count++;
    }
    return 0;
}

input:
Enter number of 3-address code instructions: 4

Enter each 3-address code line below:

Generated Assembly Code:

t1 = a + b
t2 = t1 * c
t3 = t2 - d
x = t3
