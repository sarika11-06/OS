#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void f() {
    printf("Not operator grammar\n");
    exit(0);
}

int main() {
    char grm[20][20], c;
    int i, n, j, flag = 0, hasOperator;

    printf("Enter the number of productions: ");
    scanf("%d", &n);

    printf("Enter the productions:\n");
    for (i = 0; i < n; i++) {
        scanf("%s", grm[i]);  // Input each production
    }

    // Now check for operator grammar
    for (i = 0; i < n; i++) {
        j = 3;  // RHS starts after "A->" (3rd index)
        hasOperator = 0;
        while (grm[i][j] != '\0') {
            c = grm[i][j];
            if (c == '+' || c == '-' || c == '*' || c == '/') {
                hasOperator = 1;
            }
            j++;
        }
        if (!hasOperator) {
            f();  // Exit early if any production lacks an operator
        }
        flag = 1;
    }

    if (flag == 1)
        printf("Operator grammar\n");

    return 0;
}



input
Enter the number of productions: 3
Enter the productions:
E->E+T
T->T*F
F->F/id
answer:- operator Grammar
Enter the number of productions: 3
Enter the productions:
E->E+T
T->T*F
F->id
answer: not operator grammar
